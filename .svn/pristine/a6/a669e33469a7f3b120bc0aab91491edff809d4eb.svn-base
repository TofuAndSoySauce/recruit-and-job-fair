package kr.happyjob.study.resume.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import kr.happyjob.study.history.model.HistoryResponseDto.History;
import kr.happyjob.study.resume.model.ResumeModel;
import kr.happyjob.study.resume.model.ResumeQueryParam;
import kr.happyjob.study.resume.model.ResumeRequestDto;
import kr.happyjob.study.resume.model.ResumeSubmitModel;
import kr.happyjob.study.resume.service.ResumeService;

@Controller
@RequestMapping("/resume/")
public class ResumeController {

	@Autowired
	ResumeService resumeService;

	private final Logger logger = LogManager.getLogger(this.getClass());

	@RequestMapping("resumeMgt.do")
	public String resumeMgt(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) {

		model.addAttribute("loginId", (String) session.getAttribute("loginId"));
		model.addAttribute("userNm", (String) session.getAttribute("userNm"));

		return "resume/resumeMgt";
	}

	// 이력서 리스트 불러오기
	@RequestMapping("resumeList.do")
	public String resumeList(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception {

		int pageSize = Integer.parseInt((String) paramMap.get("pageSize"));
		int cpage = Integer.parseInt((String) paramMap.get("cpage"));
		int pageindex = (cpage - 1) * pageSize;

		paramMap.put("pageindex", pageindex);
		paramMap.put("pageSize", pageSize);

		List<ResumeModel> resumeList = resumeService.resumeList(paramMap);
		int countResumeList = resumeService.countResumeList(paramMap);

		model.addAttribute("resumeList", resumeList);
		model.addAttribute("countResumeList", countResumeList);

		return "resume/resumeList";
	}

	// 이력서 등록, 수정, 삭제 버튼
	@RequestMapping("resumeSaveFile.do")
	@ResponseBody
	public Map<String, Object> resumeSaveFile(Model model, @RequestParam Map<String, Object> paramMap,
			@RequestParam("addfile") List<MultipartFile> multiFile, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception {

		paramMap.put("loginID", session.getAttribute("loginId"));
		String action = (String) paramMap.get("action");

		if ("I".equals(action)) {
			// resumeService.resumeNewSave(paramMap);
			resumeService.resumeNewSaveFile(paramMap, request, multiFile);
		} else if ("U".equals(action)) {
			// resumeService.resumeUpdate(paramMap);
			resumeService.resumeUpdateFile(paramMap, request, multiFile);
		} else if ("D".equals(action)) {
			resumeService.resumeDelete(paramMap);
		}

		Map<String, Object> returnMap = new HashMap<String, Object>();
		returnMap.put("result", "SUCCESS");
		return returnMap;

	}

	// 이력서 상세보기 초기화
	@RequestMapping("resumeDetail.do")
	@ResponseBody
	public Map<String, Object> resumeDetail(Model model, @RequestParam Map<String, Object> paramMap,
			HttpServletRequest request, HttpServletResponse response, HttpSession session) throws Exception {

		Map<String, Object> resumeDetailMap = resumeService.resumeDetail(paramMap);
		return resumeDetailMap;
	}

	// 이력서 인적사항 초기화
	@RequestMapping("userDetail.do")
	@ResponseBody
	public Map<String, Object> userDetail(Model model, @RequestParam Map<String, Object> paramMap,
			HttpServletRequest request, HttpServletResponse response, HttpSession session) throws Exception {

		Map<String, Object> userDetailMap = resumeService.userDetail(paramMap);

		return userDetailMap;
	}

	// 이력서 제출
	@ResponseBody
	@PostMapping(value="submit.do", consumes="application/json")
	public ResponseEntity<String> submit(HttpSession session, @RequestBody ResumeRequestDto.Post post) {
		
		post.setLoginId((String) session.getAttribute("loginId"));
		
		resumeService.submit(post);

		return new ResponseEntity<>(post.getRedirectPageUrl(), HttpStatus.CREATED);
	}

	// 이력서 리스트 불러오기 - json
	@GetMapping("resumeListJson.do")
	@ResponseBody
	public List<ResumeModel> resumeList(@RequestParam Map<String, Object> paramMap, HttpSession session)
			throws Exception {

		int pageSize = Integer.parseInt((String) paramMap.get("pageSize"));
		int cpage = Integer.parseInt((String) paramMap.get("cpage"));
		int pageindex = (cpage - 1) * pageSize;
		String loginId;
		
		if (session.getAttribute("loginId") == null) {
			loginId = "userc";
		} else {
			loginId = (String) session.getAttribute("loginId");
		}

		paramMap.put("loginId", loginId);
		paramMap.put("pageindex", pageindex);
		paramMap.put("pageSize", pageSize);

		List<ResumeModel> resumeList = resumeService.resumeList(paramMap);
		int countResumeList = resumeService.countResumeList(paramMap);

		return resumeService.resumeList(paramMap);
	}
	
	// 지원현황 메인
	@GetMapping("submit/index.do")
	public String submitMain(){
		return "resume/submitMain";
	}
	
	
	// 지원현황 불러오기
	@GetMapping("submit/list.do")
	public String submitList(HttpSession session, ResumeQueryParam queryParam, Model model){
		
		String loginId = (String) session.getAttribute("loginId");
	

		if (queryParam.getPageSize() == 0) queryParam.setDefaultPage();
		queryParam.setLoginId(loginId);
		queryParam.setPageIndex();
		
		List<ResumeSubmitModel> list = resumeService.getSubmitList(queryParam);
		model.addAttribute("resumeSubmitList", list);
		
		if(!list.isEmpty()){
			model.addAttribute("resumeSubmitTotalCount", list.get(0).getTotalCount());
		}
		
		return "resume/submitList";
	}
	
	// 이력서 열람 기업
	@RequestMapping("resumeHistory.do")
	public String resumeHistory(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
				HttpServletResponse response, HttpSession session) throws Exception {
			
		int pageSize = Integer.parseInt((String) paramMap.get("pageSize"));
		int cpage = Integer.parseInt((String) paramMap.get("cpage"));
		int pageindex = (cpage - 1) * pageSize;
		paramMap.put("pageindex", pageindex);
		paramMap.put("pageSize", pageSize);
			
		int countResumeHistoryList = resumeService.countResumeHistoryList(paramMap);
		List<Map<String, Object>> resumeHistoryList = resumeService.resumeHistoryList(paramMap);

		model.addAttribute("resumeHistoryList", resumeHistoryList);
		model.addAttribute("countResumeHistoryList", countResumeHistoryList);

		return "resume/resumeHistory";
	}
	
	
}
